{
  "script_summary": "The Python script reads an XML file, transforms it into a Pandas DataFrame, renames the columns, and then loads the data into a Snowflake staging table named wh_db_stage.CustomerMgmt. The script performs various data type conversions, string manipulations, and CASE statement logic to populate the staging table.",
  "target_table": "wh_db_stage.CustomerMgmt",
  "sources_summary": [
    {
      "type": "DATAFRAME",
      "name": "xml_dataframe",
      "alias_or_cte": "xml_dataframe"
    }
  ],
  "lineage": {
    "customerid": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_ID",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "CAST",
      "transformation_logic": "try_cast(C_ID as BIGINT)"
    },
    "accountid": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.CA_ID",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "CAST",
      "transformation_logic": "try_cast(CA_ID as BIGINT)"
    },
    "brokerid": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.CA_B_ID",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "CAST",
      "transformation_logic": "try_cast(CA_B_ID as BIGINT)"
    },
    "taxid": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_TAX_ID",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_TAX_ID, '')"
    },
    "accountdesc": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.CA_NAME",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(CA_NAME, '')"
    },
    "taxstatus": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.CA_TAX_ST",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "CAST",
      "transformation_logic": "try_cast(CA_TAX_ST as TINYINT)"
    },
    "status": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.ActionType",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "CASE_MAPPING",
      "transformation_logic": "CASE WHEN ActionType IN ('NEW', 'ADDACCT', 'UPDACCT', 'UPDCUST') THEN 'Active' WHEN ActionType IN ('CLOSEACCT', 'INACT') THEN 'Inactive' ELSE NULL END"
    },
    "lastname": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_L_NAME",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_L_NAME, '')"
    },
    "firstname": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_F_NAME",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_F_NAME, '')"
    },
    "middleinitial": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_M_NAME",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_M_NAME, '')"
    },
    "gender": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_GNDR",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "EXPRESSION",
      "transformation_logic": "nullif(upper(C_GNDR), '')"
    },
    "tier": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_TIER",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "CAST",
      "transformation_logic": "try_cast(C_TIER as TINYINT)"
    },
    "dob": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_DOB",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "CAST",
      "transformation_logic": "try_cast(C_DOB as DATE)"
    },
    "addressline1": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_ADLINE1",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_ADLINE1, '')"
    },
    "addressline2": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_ADLINE2",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_ADLINE2, '')"
    },
    "postalcode": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_ZIPCODE",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_ZIPCODE, '')"
    },
    "city": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_CITY",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_CITY, '')"
    },
    "stateprov": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_STATE_PROV",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_STATE_PROV, '')"
    },
    "country": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_CTRY",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_CTRY, '')"
    },
    "phone1": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_LOCAL",
          "path": [],
          "role": "direct input"
        },
        {
          "source_identifier": "xml_dataframe.C_CTRY_CODE",
          "path": [],
          "role": "direct input"
        },
        {
          "source_identifier": "xml_dataframe.C_AREA_CODE",
          "path": [],
          "role": "direct input"
        },
        {
          "source_identifier": "xml_dataframe.C_EXT",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "EXPRESSION_CONCAT",
      "transformation_logic": "CASE WHEN nullif(C_LOCAL, '') IS NOT NULL THEN concat( CASE WHEN nullif(C_CTRY_CODE, '') IS NOT NULL THEN '+' || C_CTRY_CODE || ' ' ELSE '' END, CASE WHEN nullif(C_AREA_CODE, '') IS NOT NULL THEN '(' || C_AREA_CODE || ') ' ELSE '' END, C_LOCAL, COALESCE(C_EXT, '')) ELSE NULL END"
    },
    "phone2": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_LOCAL_1",
          "path": [],
          "role": "direct input"
        },
        {
          "source_identifier": "xml_dataframe.C_CTRY_CODE_1",
          "path": [],
          "role": "direct input"
        },
        {
          "source_identifier": "xml_dataframe.C_AREA_CODE_1",
          "path": [],
          "role": "direct input"
        },
        {
          "source_identifier": "xml_dataframe.C_EXT_1",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "EXPRESSION_CONCAT",
      "transformation_logic": "CASE WHEN nullif(C_LOCAL_1, '') IS NOT NULL THEN concat( CASE WHEN nullif(C_CTRY_CODE_1, '') IS NOT NULL THEN '+' || C_CTRY_CODE_1 || ' ' ELSE '' END, CASE WHEN nullif(C_AREA_CODE_1, '') IS NOT NULL THEN '(' || C_AREA_CODE_1 || ') ' ELSE '' END, C_LOCAL_1, COALESCE(C_EXT_1, '')) ELSE NULL END"
    },
    "phone3": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_LOCAL_2",
          "path": [],
          "role": "direct input"
        },
        {
          "source_identifier": "xml_dataframe.C_CTRY_CODE_2",
          "path": [],
          "role": "direct input"
        },
        {
          "source_identifier": "xml_dataframe.C_AREA_CODE_2",
          "path": [],
          "role": "direct input"
        },
        {
          "source_identifier": "xml_dataframe.C_EXT_2",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "EXPRESSION_CONCAT",
      "transformation_logic": "CASE WHEN nullif(C_LOCAL_2, '') IS NOT NULL THEN concat( CASE WHEN nullif(C_CTRY_CODE_2, '') IS NOT NULL THEN '+' || C_CTRY_CODE_2 || ' ' ELSE '' END, CASE WHEN nullif(C_AREA_CODE_2, '') IS NOT NULL THEN '(' || C_AREA_CODE_2 || ') ' ELSE '' END, C_LOCAL_2, COALESCE(C_EXT_2, '')) ELSE NULL END"
    },
    "email1": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_PRIM_EMAIL",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_PRIM_EMAIL, '')"
    },
    "email2": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_ALT_EMAIL",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_ALT_EMAIL, '')"
    },
    "lcl_tx_id": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_LCL_TX_ID",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_LCL_TX_ID, '')"
    },
    "nat_tx_id": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.C_NAT_TX_ID",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "nullif(C_NAT_TX_ID, '')"
    },
    "update_ts": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.ActionTS",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "CAST",
      "transformation_logic": "try_cast(ActionTS as TIMESTAMP)"
    },
    "ActionType": {
      "sources": [
        {
          "source_identifier": "xml_dataframe.ActionType",
          "path": [],
          "role": "direct input"
        }
      ],
      "transformation_type": "RENAME",
      "transformation_logic": "ActionType"
    }
  }
}
