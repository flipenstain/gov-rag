{
    "target_table": "wh_db.DimCompany",
    "sources_summary": [
        {
            "type": "TABLE",
            "name": "wh_db_stage.FinWire",
            "alias_or_cte": "cmp"
        },
        {
            "type": "TABLE",
            "name": "wh_db.industry",
            "alias_or_cte": "ind"
        }
    ],
    "lineage": {
        "sk_companyid": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.recdate",
                    "path": [
                        "cmp.recdate",
                        "effectivedate"
                    ],
                    "role": "Date part source"
                },
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.CIK",
                        "companyid"
                    ],
                    "role": "ID part source"
                }
            ],
            "transformation_type": "EXPRESSION_CONCAT",
            "transformation_logic": "CAST(strftime(effectivedate, '%Y%m%d') || companyid AS BIGINT)"
        },
        "companyid": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.CIK"
                    ]
                }
            ],
            "transformation_type": "CAST",
            "transformation_logic": "CAST(cik AS BIGINT)"
        },
        "status": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.Status"
                    ]
                }
            ],
            "transformation_type": "CASE_MAPPING",
            "transformation_logic": "CASE cmp.status WHEN 'ACTV' THEN 'Active' WHEN 'CMPT' THEN 'Completed' WHEN 'CNCL' THEN 'Canceled' WHEN 'PNDG' THEN 'Pending' WHEN 'SBMT' THEN 'Submitted' WHEN 'INAC' THEN 'Inactive' ELSE NULL END"
        },
        "name": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.CompanyName"
                    ]
                }
            ],
            "transformation_type": "RENAME",
            "transformation_logic": "CompanyName AS name"
        },
        "industry": {
            "sources": [
                {
                    "source_identifier": "wh_db.industry.in_name",
                    "join_info": {
                        "type": "INNER JOIN",
                        "left_source": {
                            "identifier": "wh_db_stage.FinWire.value",
                            "path": [
                                "cmp.IndustryID"
                            ]
                        },
                        "right_source": {
                            "identifier": "wh_db.industry.in_id"
                        }
                    }
                }
            ],
            "transformation_type": "JOIN_LOOKUP",
            "transformation_logic": "ind.in_name via JOIN ON cmp.industryid = ind.in_id"
        },
        "sprating": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.SPrating"
                    ]
                }
            ],
            "transformation_type": "CASE_MAPPING",
            "transformation_logic": "CASE WHEN SPrating IN ('AAA', 'AA', 'AA+', 'AA-', 'A', 'A+', 'A-', 'BBB', 'BBB+', 'BBB-', 'BB', 'BB+', 'BB-', 'B', 'B+', 'B-', 'CCC', 'CCC+', 'CCC-', 'CC', 'C', 'D') THEN SPrating ELSE NULL::VARCHAR END"
        },
        "islowgrade": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.SPrating"
                    ]
                }
            ],
            "transformation_type": "CASE_MAPPING",
            "transformation_logic": "CASE WHEN SPrating IN ('AAA', 'AA', 'A', 'AA+', 'A+', 'AA-', 'A-', 'BBB', 'BBB+', 'BBB-') THEN FALSE WHEN SPrating IN ('BB', 'B', 'CCC', 'CC', 'C', 'D', 'BB+', 'B+', 'CCC+', 'BB-', 'B-', 'CCC-') THEN TRUE ELSE NULL::BOOLEAN END"
        },
        "ceo": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.CEOname"
                    ]
                }
            ],
            "transformation_type": "RENAME",
            "transformation_logic": "CEOname AS ceo"
        },
        "addressline1": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.AddrLine1"
                    ]
                }
            ],
            "transformation_type": "RENAME",
            "transformation_logic": "AddrLine1 AS addressline1"
        },
        "addressline2": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.AddrLine2"
                    ]
                }
            ],
            "transformation_type": "RENAME",
            "transformation_logic": "AddrLine2 AS addressline2"
        },
        "postalcode": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.PostalCode"
                    ]
                }
            ],
            "transformation_type": "RENAME",
            "transformation_logic": "PostalCode AS postalcode"
        },
        "city": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.City"
                    ]
                }
            ],
            "transformation_type": "RENAME",
            "transformation_logic": "City AS city"
        },
        "stateprov": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.StateProvince"
                    ]
                }
            ],
            "transformation_type": "RENAME",
            "transformation_logic": "StateProvince AS stateprov"
        },
        "country": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.Country"
                    ]
                }
            ],
            "transformation_type": "RENAME",
            "transformation_logic": "Country AS country"
        },
        "description": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.Description"
                    ]
                }
            ],
            "transformation_type": "RENAME",
            "transformation_logic": "Description AS description"
        },
        "foundingdate": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.FoundingDate"
                    ]
                }
            ],
            "transformation_type": "RENAME",
            "transformation_logic": "FoundingDate AS foundingdate"
        },
        "iscurrent": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.recdate",
                    "path": [
                        "cmp.recdate",
                        "enddate"
                    ],
                    "role": "Input for comparison"
                }
            ],
            "transformation_type": "CASE_MAPPING",
            "transformation_logic": "CASE WHEN enddate = '9999-12-31'::DATE THEN TRUE ELSE FALSE END"
        },
        "batchid": {
            "sources": [],
            "transformation_type": "CONSTANT",
            "transformation_logic": "1"
        },
        "effectivedate": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.recdate",
                    "path": [
                        "cmp.recdate"
                    ]
                }
            ],
            "transformation_type": "RENAME",
            "transformation_logic": "recdate AS effectivedate"
        },
        "enddate": {
            "sources": [
                {
                    "source_identifier": "wh_db_stage.FinWire.recdate",
                    "path": [
                        "cmp.recdate"
                    ],
                    "role": "Input for LEAD"
                },
                {
                    "source_identifier": "wh_db_stage.FinWire.value",
                    "path": [
                        "cmp.CIK"
                    ],
                    "role": "Partition key for LEAD"
                }
            ],
            "transformation_type": "WINDOW_FUNCTION",
            "transformation_logic": "COALESCE(LEAD(try_cast(recdate AS DATE)) OVER (PARTITION BY cik ORDER BY recdate), try_cast('9999-12-31' AS DATE))",
            "notes": "SCD2 end date calculation"
        }
    }
}